(function() {
    var type_impls = Object.fromEntries([["request_response",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NamedSemaphore%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/request_response/util.rs.html#33\">Source</a><a href=\"#impl-Clone-for-NamedSemaphore%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"request_response/util/struct.NamedSemaphore.html\" title=\"struct request_response::util::NamedSemaphore\">NamedSemaphore</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/request_response/util.rs.html#33\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"request_response/util/struct.NamedSemaphore.html\" title=\"struct request_response::util::NamedSemaphore\">NamedSemaphore</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","request_response::IncomingRequests","request_response::IncomingResponses"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NamedSemaphore%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/request_response/util.rs.html#59-108\">Source</a><a href=\"#impl-NamedSemaphore%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>&gt; <a class=\"struct\" href=\"request_response/util/struct.NamedSemaphore.html\" title=\"struct request_response::util::NamedSemaphore\">NamedSemaphore</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/request_response/util.rs.html#61-68\">Source</a><h4 class=\"code-header\">pub fn <a href=\"request_response/util/struct.NamedSemaphore.html#tymethod.new\" class=\"fn\">new</a>(max_permits_per_key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>, max_total_permits: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new named semaphore, specifying the maximum number of permits for each key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_acquire\" class=\"method\"><a class=\"src rightside\" href=\"src/request_response/util.rs.html#71-102\">Source</a><h4 class=\"code-header\">pub fn <a href=\"request_response/util/struct.NamedSemaphore.html#tymethod.try_acquire\" class=\"fn\">try_acquire</a>(\n    &amp;self,\n    key: T,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"request_response/util/struct.NamedSemaphorePermit.html\" title=\"struct request_response::util::NamedSemaphorePermit\">NamedSemaphorePermit</a>&lt;T&gt;, <a class=\"enum\" href=\"request_response/util/enum.NamedSemaphoreError.html\" title=\"enum request_response::util::NamedSemaphoreError\">NamedSemaphoreError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to acquire a permit for the given key.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_num_permits_held\" class=\"method\"><a class=\"src rightside\" href=\"src/request_response/util.rs.html#105-107\">Source</a><h4 class=\"code-header\">pub fn <a href=\"request_response/util/struct.NamedSemaphore.html#tymethod.total_num_permits_held\" class=\"fn\">total_num_permits_held</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Get the total number of permits that are currently being held across all keys</p>\n</div></details></div></details>",0,"request_response::IncomingRequests","request_response::IncomingResponses"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[6344]}